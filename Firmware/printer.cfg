[include fluidd.cfg]
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[virtual_sdcard]
path: /home/user/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[respond]
default_type: echo

[printer]
kinematics: none
max_velocity: 1000
max_accel: 1000

[gcode_button MMU_Endstop0]
pin: !mcu:PB13
press_gcode:   _MMU ENDSTOP=0 VALUE=1
release_gcode: _MMU ENDSTOP=0 VALUE=0
[gcode_button MMU_Endstop1]
pin: !mcu:PB14
press_gcode:   _MMU ENDSTOP=1 VALUE=1
release_gcode: _MMU ENDSTOP=1 VALUE=0
[gcode_button MMU_Endstop2]
pin: !mcu:PB15
press_gcode:   _MMU ENDSTOP=2 VALUE=1
release_gcode: _MMU ENDSTOP=2 VALUE=0
[gcode_button MMU_Endstop3]
pin: !mcu:PA8
press_gcode:   _MMU ENDSTOP=3 VALUE=1
release_gcode: _MMU ENDSTOP=3 VALUE=0
# [gcode_button MMU_Endstop4]
# pin: !mcu:
# press_gcode:   _MMU ENDSTOP=4 VALUE=1
# release_gcode: _MMU ENDSTOP=4 VALUE=0
# [gcode_button MMU_Endstop5]
# pin: !mcu:
# press_gcode:   _MMU ENDSTOP=5 VALUE=1
# release_gcode: _MMU ENDSTOP=5 VALUE=0
# [gcode_button MMU_Endstop6]
# pin: !mcu:
# press_gcode:   _MMU ENDSTOP=6 VALUE=1
# release_gcode: _MMU ENDSTOP=6 VALUE=0
# [gcode_button MMU_Endstop7]
# pin: !mcu:
# press_gcode:   _MMU ENDSTOP=7 VALUE=1
# release_gcode: _MMU ENDSTOP=7 VALUE=0
[gcode_button MMU_Endstop8]
pin: !mcu:PB12
press_gcode:   _MMU ENDSTOP=8 VALUE=1
release_gcode: _MMU ENDSTOP=8 VALUE=0
# [filament_switch_sensor fss]
# switch_pin: !mcu:PB12
# insert_gcode: _MMU ENDSTOP=4 VALUE=1
# runout_gcode: _MMU ENDSTOP=4 VALUE=0

[servo MMU_SERVO01] # servo for selecting filament 0 & 1
pin: mcu:PA0
initial_angle: 90
# [servo MMU_SERVO23] # servo for selecting filament 2 & 3
# pin: mcu:
# initial_angle: 90
# [servo MMU_SERVO45] # servo for selecting filament 4 & 5
# pin: mcu:
# initial_angle: 90
# [servo MMU_SERVO67] # servo for selecting filament 6 & 7
# pin: mcu:
# initial_angle: 90

# [output_pin MMU_SPEED04] # BLDC speed control for filament 0-4
# pin: mcu:PA1
# pwm: True
# hardware_pwm: True
# cycle_time: 0.00005 # 20 kHz (motor pwm range: 15 - 25 kHz)

[fan_generic MMU_SPEED04] # BLDC speed control for filament 0-4
pin: mcu:PA1
cycle_time: 0.00005 # 20 kHz (motor pwm range: 15 - 25 kHz)
hardware_pwm: True
kick_start_time: 0.0
tachometer_pin: mcu:PA11
tachometer_ppr: 90 # ppr is 9, but i want to see the rpm on the output shaft
tachometer_poll_interval: 0.0002

# [output_pin MMU_SPEED57] # BLDC speed control for filament 5-7
# pin: mcu:PA2
# cycle_time: 0.00005 # 20 kHz (motor pwm range: 15 - 25 kHz)
# hardware_pwm: True
# kick_start_time: 0.0
# tachometer_pin: mcu:PA12
# tachometer_ppr: 90 # ppr is 9, but i want to see the rpm on the output shaft
# tachometer_poll_interval: 0.0002

[output_pin MMU_DIR] # BLDC direction control for all filaments
pin: mcu:PB9


# [heater_generic MMU_HEATER]
# gcode_id: MMU_HEATER
# heater_pin: 
# sensor_type: Generic 3950
# sensor_pin: mcu:PB1
# control: pid
# pid_Kp: 49.034 
# pid_Ki: 2.224 
# pid_Kd: 270.296
# min_temp: 0
# max_temp: 100

# [controller_fan MMU_FAN]
# pin: 
# heater: MMU_HEATER
# fan_speed: 1.0
# idle_timeout: 30
# idle_speed: 1.0







[gcode_macro TEST]
description: GCode for debuging the MMU
gcode:
    RESPOND MSG="ENDSTOP0: {printer["gcode_macro _MMU"].endstop0}"
    RESPOND MSG="ENDSTOP1: {printer["gcode_macro _MMU"].endstop1}"
    RESPOND MSG="ENDSTOP2: {printer["gcode_macro _MMU"].endstop2}"
    RESPOND MSG="ENDSTOP3: {printer["gcode_macro _MMU"].endstop3}"

[delayed_gcode MMU_TIMEOUT]
# Timeout, that guards all MMU functions.
gcode:
    MMU_MOVE TOOL=-1 SPEED=0.0
    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="''"
    RESPOND TYPE=error MSG="MMU_TIMEOUT"

[delayed_gcode MMU_STOP]
gcode:
    MMU_MOVE SPEED=0.0

[gcode_macro _MMU]
description: State machine for interacting with the MMU
variable_home_timeout: 10.0
variable_home_speed: 0.1 # retraction speed used for homeing
variable_load_timeout: 10.0
variable_load_speeds: (1.0, 5500, 0.2) # (<speed>, <duration>, ..., <speed>)
variable_unload_speed: 1.0
variable_eject_duration: 1.0
variable_action: ""
variable_endstop0: 0
variable_endstop1: 0
variable_endstop2: 0
variable_endstop3: 0
variable_endstop4: 0
variable_endstop5: 0
variable_endstop6: 0
variable_endstop7: 0
variable_endstop8: 0
gcode:
    RESPOND MSG="_MMU {rawparams} (Action={printer["gcode_macro _MMU"].action})"

    {% if 'ENDSTOP' in params %}
        {% set endstop = params.ENDSTOP|int %}
        {% set value   = params.VALUE|int %}
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE={"endstop" ~ endstop} VALUE={value}

        {% if printer["gcode_macro _MMU"].action != "" %}
            {% set action = printer["gcode_macro _MMU"].action.split(":")[0] %}
            {% set tool   = printer["gcode_macro _MMU"].action.split(":")[1]|int %}
            {% set phase  = printer["gcode_macro _MMU"].action.split(":")[2]|int %}

            {% if action == "HOME" %}
                {% if phase == 1 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'{action}:{tool}:{phase + 1}'"
                    UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION={printer["gcode_macro _MMU"].home_timeout}
                    MMU_MOVE TOOL={tool} SPEED=-{printer["gcode_macro _MMU"].home_speed}
                {% else %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="''"
                    MMU_MOVE TOOL=-1 SPEED=0.0
                    RESPOND MSG="Tool {tool} homed."
                    UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION=0
                {% endif %}
            {% elif action == "LOAD" %}
                {% if phase == 1 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'{action}:{tool}:{phase + 1}'"
                    MMU_MOVE TOOL={endstop} SPEED={printer["gcode_macro _MMU"].load_speeds[0]}
                {% elif phase == 2 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'{action}:{tool}:{phase + 1}'"
                    MMU_MOVE TOOL={endstop} SPEED=-{printer["gcode_macro _MMU"].home_speed}
                {% elif phase == 3 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'{action}:{tool}:1'"
                    MMU_MOVE TOOL=-1 SPEED=0.0
                    MMU_LOAD TOOL={tool}
                {% elif endstop == 8 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="''"
                    UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION=0
                    MMU_MOVE TOOL=-1 SPEED=0.0
                {% endif %}
            {% elif action == "UNLOAD" %}
                {% if endstop == 8 %}
                {% elif phase == 1 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'{action}:{tool}:{phase + 1}'"
                    UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION={printer["gcode_macro _MMU"].home_timeout}
                    MMU_MOVE TOOL={TOOL} SPEED={printer["gcode_macro _MMU"].home_speed}
                {% elif phase == 2 %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'{action}:{tool}:{phase + 1}'"
                    UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION={printer["gcode_macro _MMU"].home_timeout}
                    MMU_MOVE TOOL={TOOL} SPEED=-{printer["gcode_macro _MMU"].home_speed}
                {% else %}
                    SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="''"
                    MMU_MOVE TOOL=-1 SPEED=0.0
                    RESPOND MSG="Tool {tool} unloaded."
                    UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION=0
                {% endif %}
            {% elif action == "EJECT" %}
                SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="''"
                UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION=0
                MMU_EJECT TOOL={tool}
            {% else %}
                SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="''"
            {% endif %}
        {% endif %}
    {% endif %}

[gcode_macro MMU_MOVE]
description: Selects and moves filament from MMU
gcode:
    RESPOND MSG="MMU_MOVE {rawparams}"
    {% set SPEED = params.SPEED|float %}
    {% set TOOL  = params.TOOL|int %}
    
    {% if TOOL == -1 %}
        # deselect all filaments
        SET_SERVO SERVO=MMU_SERVO01 ANGLE=90
    {% elif TOOL == 0 %}
        SET_SERVO SERVO=MMU_SERVO01 ANGLE=0
    {% elif TOOL == 1 %}
        SET_SERVO SERVO=MMU_SERVO01 ANGLE=180
    # {% elif TOOL == 2 %}
    #     SET_SERVO SERVO=MMU_SERVO23 ANGLE=0
    # {% elif TOOL == 3 %}
    #     SET_SERVO SERVO=MMU_SERVO23 ANGLE=180
    # {% elif TOOL == 4 %}
    #     SET_SERVO SERVO=MMU_SERVO45 ANGLE=0
    # {% elif TOOL == 5 %}
    #     SET_SERVO SERVO=MMU_SERVO45 ANGLE=180
    # {% elif TOOL == 6 %}
    #     SET_SERVO SERVO=MMU_SERVO67 ANGLE=0
    # {% elif TOOL == 7 %}
    #     SET_SERVO SERVO=MMU_SERVO67 ANGLE=180
    {% else %}
        RESPOND TYPE=error MSG="Can not select tool {TOOL}"
    {% endif %}

    {% if SPEED == 0 %}
        SET_PIN PIN=MMU_DIR VALUE=0
        SET_FAN_SPEED FAN=MMU_SPEED04 SPEED=0
        # SET_FAN_SPEED FAN=MMU_SPEED57 SPEED=0
    {% else %}
        {% if TOOL in (1,3,5,7) %}
            SET_PIN PIN=MMU_DIR VALUE={0 if SPEED > 0 else 1}
        {% else %}
            SET_PIN PIN=MMU_DIR VALUE={1 if SPEED > 0 else 0}
        {% endif %}
        {% if TOOL in (0,1,2,3) %}
            SET_FAN_SPEED FAN=MMU_SPEED04 SPEED={SPEED|abs}
        #   SET_FAN_SPEED FAN=MMU_SPEED57 SPEED=0
        # {% elif TOOL in (4,5,6,7) %}
        #     SET_FAN_SPEED FAN=MMU_SPEED04 SPEED=0
        #     SET_FAN_SPEED FAN=MMU_SPEED57 SPEED={SPEED|abs}
        {% else %}
            RESPOND TYPE=error MSG="Can not select tool {TOOL}"
        {% endif %}
    {% endif %}

[gcode_macro MMU_HOME] 
description: Homes filament 
gcode:
    RESPOND MSG="MMU_HOME {rawparams}"
    {% set TOOL = params.TOOL|int %}
    {% set STATE = printer["gcode_macro _MMU"]["endstop" ~ TOOL]|int %}

    {% if STATE == 1 %}
        RESPOND TYPE=error MSG="Cannot home tool {TOOL}. Already loaded?"
    {% else %}
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'HOME:{TOOL}:1'"
        UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION={printer["gcode_macro _MMU"].load_timeout}
        MMU_MOVE TOOL={TOOL} SPEED={printer["gcode_macro _MMU"].load_speeds[0]}
    {% endif %}

[gcode_macro MMU_LOAD]
description: Loads filament into the extruder
gcode:
    RESPOND MSG="MMU_LOAD {rawparams}"
    {% set TOOL = params.TOOL|int %}
    {% set STATE = printer["gcode_macro _MMU"]["endstop" ~ TOOL]|int %}

    {% if STATE == 1 %}
        RESPOND TYPE=error MSG="Cannot load tool {TOOL}. Already loaded?"
    {% else %}
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'LOAD:{TOOL}:1'"
        UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION=60.0

        {% if printer["gcode_macro _MMU"].endstop0|int   == 1 %}
            MMU_MOVE TOOL=0 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop1|int == 1 %}
            MMU_MOVE TOOL=1 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop2|int == 1 %}
            MMU_MOVE TOOL=2 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop3|int == 1 %}
            MMU_MOVE TOOL=3 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop4|int == 1 %}
            MMU_MOVE TOOL=4 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop5|int == 1 %}
            MMU_MOVE TOOL=5 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop6|int == 1 %}
            MMU_MOVE TOOL=6 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% elif printer["gcode_macro _MMU"].endstop7|int == 1 %}
            MMU_MOVE TOOL=7 SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        {% else %}
            # push  filament til runout sensor is triggerd
            UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION={printer["gcode_macro _MMU"].load_timeout}
            SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'LOAD:{TOOL}:4'"
            {% set speeds = printer["gcode_macro _MMU"].load_speeds %}
            {% set count = speeds|length %}
            {% for i in range(0, count-1, 2) %}
                MMU_MOVE TOOL={TOOL} SPEED={speeds[i]}
                G4 P{speeds[i+1]}
            {% endfor %}
            MMU_MOVE TOOL={TOOL} SPEED={speeds[-1]}
        {% endif %}
    {% endif %}

[gcode_macro MMU_UNLOAD]
description: Unloads filament from extruder
gcode:
    RESPOND MSG="MMU_UNLOAD {rawparams}"
    {% set TOOL = params.TOOL|int %}
    {% set STATE = printer["gcode_macro _MMU"]["endstop" ~ TOOL]|int %}

    {% if STATE == 0 %}
        RESPOND TYPE=error MSG="Cannot unload tool {TOOL}. Tool not loaded?"
    {% else %}
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'UNLOAD:{TOOL}:1'"
        UPDATE_DELAYED_GCODE ID=MMU_TIMEOUT DURATION={printer["gcode_macro _MMU"].load_timeout}
        MMU_MOVE TOOL={TOOL} SPEED=-{printer["gcode_macro _MMU"].unload_speed}
    {% endif %}

[gcode_macro MMU_EJECT] 
description: Ejects filament from MMU
gcode:
    RESPOND MSG="MMU_EJECT {rawparams}"
    {% set TOOL = params.TOOL|int %}
    {% set STATE = printer["gcode_macro _MMU"]["endstop" ~ TOOL]|int %}

    {% if STATE == 1 %}
        MMU_MOVE TOOL={TOOL} SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        SET_GCODE_VARIABLE MACRO=_MMU VARIABLE=action VALUE="'EJECT:{TOOL}:1'"
        UPDATE_DELAYED_GCODE ID=MMU_STOP DURATION={printer["gcode_macro _MMU"].load_timeout|float + printer["gcode_macro _MMU"].eject_duration|float}
    {% else %}
        MMU_MOVE TOOL={TOOL} SPEED=-{printer["gcode_macro _MMU"].unload_speed}
        UPDATE_DELAYED_GCODE ID=MMU_STOP DURATION={printer["gcode_macro _MMU"].eject_duration}
    {% endif %}



[gcode_macro T0]
gcode: 
    MMU_LOAD TOOL=0
[gcode_macro T1]
gcode: 
    MMU_LOAD TOOL=1
[gcode_macro T2]
gcode: 
    MMU_LOAD TOOL=2
[gcode_macro T3]
gcode: 
    MMU_LOAD TOOL=3
[gcode_macro T4]
gcode: 
    MMU_LOAD TOOL=4
[gcode_macro T5]
gcode: 
    MMU_LOAD TOOL=5
[gcode_macro T6]
gcode: 
    MMU_LOAD TOOL=6
[gcode_macro T7]
gcode: 
    MMU_LOAD TOOL=7
